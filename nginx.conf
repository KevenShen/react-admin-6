
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
		
    }
	
	server {
    listen      1102;
    server_name  localhost;
		
	    # 开启压缩机制
		gzip on;
		# 指定会被压缩的文件类型(也可自己配置其他类型)
		gzip_types text/plain application/javascript text/css application/xml text/javascript image/jpeg image/gif image/png;
		# 设置压缩级别，越高资源消耗越大，但压缩效果越好
		gzip_comp_level 5;
		# 在头部中添加Vary: Accept-Encoding（建议开启）
		gzip_vary on;
		# 处理压缩请求的缓冲区数量和大小
		gzip_buffers 16 8k;
		# 对于不支持压缩功能的客户端请求不开启压缩机制
		gzip_disable "MSIE [1-6]\."; # 低版本的IE浏览器不支持压缩
		# 设置压缩响应所支持的HTTP最低版本
		gzip_http_version 1.1;
		# 设置触发压缩的最小阈值
		gzip_min_length 1k;
		# 关闭对后端服务器的响应结果进行压缩
		gzip_proxied off;

		
		location / {
			root   /usr/local/admin;
			index  index.html index.htm;
			
    }
		
		#location ~ .*\.(html|htm|gif|jpg|jpeg|bmp|png|ico|txt|js|css){
		#	root   E:/ReactObj/react-admin/dist;
		#	expires 7d;
		#}
	

		location ^~/api/ {
			proxy_pass http://node:1103/;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		}
  }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
